@startuml

abstract Node {
    id : str
    input : List[NodeConnector]
    output : List[NodeConnector]
    {abstract} from_json_dict(json_dict)
    {abstract} to_json_dict() : dict
    {abstract} invoke(monitor, **args)
}

class Graph extends Node {
    from_json_dict(json_dict)
    to_json_dict() : dict
    invoke(monitor, **args)
}

class ChildNode extends Node {
}

class GraphNode extends ChildNode {
    resource : str
    from_json_dict(json_dict)
    to_json_dict() : dict
    invoke(monitor, **args)
}

class OpNode extends ChildNode {
    op_name : str
    from_json_dict(json_dict)
    to_json_dict() : dict
    invoke(monitor, **args)
}

class op.OpMetaInfo {
    qualified_name : str
    header : dict
    input : dict
    output : dict
}

GraphNode --> Graph: graph
OpNode o--> op.OpRegistration : op_registration
Node o--> op.OpMetaInfo: op_meta_info
Graph o--> "0..N" Node: nodes
ChildNode --> Node : parent


note left of Graph
Collection pattern
end note

@enduml